name: Deploy

on:
  release:
    types: [published]
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to deploy to'
        required: true
        default: 'staging'
        type: choice
        options:
        - staging
        - production

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Log in to Container Registry
      uses: docker/login-action@v3
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Extract metadata
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
        tags: |
          type=ref,event=branch
          type=ref,event=pr
          type=semver,pattern={{version}}
          type=semver,pattern={{major}}.{{minor}}
          type=semver,pattern={{major}}
          type=sha

    - name: Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        context: .
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}

  deploy-k8s:
    runs-on: ubuntu-latest
    needs: build-and-push
    if: github.event_name == 'release' || github.event.inputs.environment
    environment: ${{ github.event.inputs.environment || 'production' }}

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Helm
      uses: azure/setup-helm@v4
      with:
        version: '3.12.0'

    - name: Configure kubectl
      uses: azure/k8s-set-context@v4
      with:
        method: kubeconfig
        kubeconfig: ${{ secrets.KUBE_CONFIG }}

    - name: Deploy with Helm
      run: |
        helm upgrade --install junior ./helm/junior \
          --namespace junior \
          --create-namespace \
          --set image.repository=${{ env.REGISTRY }}/${{ env.IMAGE_NAME }} \
          --set image.tag=${{ github.sha }} \
          --set secrets.openaiApiKey="${{ secrets.OPENAI_API_KEY }}" \
          --set secrets.anthropicApiKey="${{ secrets.ANTHROPIC_API_KEY }}" \
          --set secrets.githubToken="${{ secrets.GITHUB_TOKEN_DEPLOY }}" \
          --set secrets.secretKey="${{ secrets.SECRET_KEY }}" \
          --wait --timeout=300s

    - name: Verify deployment
      run: |
        kubectl get pods -n junior
        kubectl get services -n junior