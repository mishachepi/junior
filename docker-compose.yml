version: '3.8'

services:
  junior:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: junior
    environment:
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - ANTHROPIC_API_KEY=${ANTHROPIC_API_KEY}
      - GITHUB_TOKEN=${GITHUB_TOKEN}
      - SECRET_KEY=${SECRET_KEY}
      - LOG_LEVEL=${LOG_LEVEL:-INFO}
      - DEBUG=${DEBUG:-false}
      - DATABASE_URL=postgresql://junior:junior@postgres:5432/junior
    env_file:
      - .env
    volumes:
      - ./logs:/app/logs
      - ./data:/app/data
    networks:
      - junior-network
    depends_on:
      - postgres
      - redis
    restart: unless-stopped

  postgres:
    image: postgres:16-alpine
    container_name: junior-postgres
    environment:
      - POSTGRES_DB=junior
      - POSTGRES_USER=junior
      - POSTGRES_PASSWORD=junior
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - junior-network
    restart: unless-stopped

  # Webhook API service (main service)
  webhook-api:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: junior-webhook-api
    environment:
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - ANTHROPIC_API_KEY=${ANTHROPIC_API_KEY}
      - GITHUB_TOKEN=${GITHUB_TOKEN}
      - GITHUB_WEBHOOK_SECRET=${GITHUB_WEBHOOK_SECRET}
      - SECRET_KEY=${SECRET_KEY}
      - LOG_LEVEL=${LOG_LEVEL:-INFO}
      - DEBUG=${DEBUG:-false}
      - DATABASE_URL=postgresql://junior:junior@postgres:5432/junior
      - API_HOST=0.0.0.0
      - API_PORT=8000
      - MAX_FILES_PER_PR=${MAX_FILES_PER_PR:-50}
      - REVIEW_TIMEOUT=${REVIEW_TIMEOUT:-300}
      - ENABLE_SECURITY_CHECKS=${ENABLE_SECURITY_CHECKS:-true}
      - ENABLE_PERFORMANCE_CHECKS=${ENABLE_PERFORMANCE_CHECKS:-true}
      - ENABLE_STYLE_CHECKS=${ENABLE_STYLE_CHECKS:-true}
      - ENABLE_COMPLEXITY_CHECKS=${ENABLE_COMPLEXITY_CHECKS:-true}
    env_file:
      - .env
    ports:
      - "8000:8000"
    volumes:
      - ./logs:/app/logs
      - ./temp:/app/temp
    networks:
      - junior-network
    depends_on:
      - postgres
      - redis
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

volumes:
  postgres_data:

networks:
  junior-network:
    driver: bridge