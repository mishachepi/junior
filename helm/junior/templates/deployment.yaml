apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "junior.fullname" . }}
  labels:
    {{- include "junior.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "junior.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "junior.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "junior.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          command: ["uv", "run", "python", "-m", "junior.api"]
          ports:
            - name: http
              containerPort: {{ .Values.service.port }}
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /health
              port: http
            initialDelaySeconds: 30
            periodSeconds: 10
          readinessProbe:
            httpGet:
              path: /ready
              port: http
            initialDelaySeconds: 5
            periodSeconds: 5
          env:
            - name: LOG_LEVEL
              value: {{ .Values.config.logLevel | quote }}
            - name: DEBUG
              value: {{ .Values.config.debug | quote }}
            - name: API_HOST
              value: "0.0.0.0"
            - name: API_PORT
              value: {{ .Values.service.port | quote }}
            - name: MAX_FILE_SIZE
              value: {{ .Values.config.maxFileSize | quote }}
            - name: MAX_FILES_PER_PR
              value: {{ .Values.config.maxFilesPerPr | quote }}
            - name: REVIEW_TIMEOUT
              value: {{ .Values.config.reviewTimeout | quote }}
            - name: ENABLE_SECURITY_CHECKS
              value: {{ .Values.config.enableSecurityChecks | quote }}
            - name: ENABLE_PERFORMANCE_CHECKS
              value: {{ .Values.config.enablePerformanceChecks | quote }}
            - name: ENABLE_STYLE_CHECKS
              value: {{ .Values.config.enableStyleChecks | quote }}
            - name: ENABLE_COMPLEXITY_CHECKS
              value: {{ .Values.config.enableComplexityChecks | quote }}
            {{- if .Values.postgresql.enabled }}
            - name: DATABASE_URL
              value: "postgresql://{{ .Values.database.username }}:$(POSTGRES_PASSWORD)@{{ .Values.database.host }}:{{ .Values.database.port }}/{{ .Values.database.name }}"
            {{- end }}
            - name: OPENAI_API_KEY
              valueFrom:
                secretKeyRef:
                  name: {{ include "junior.fullname" . }}-secrets
                  key: openai-api-key
            - name: ANTHROPIC_API_KEY
              valueFrom:
                secretKeyRef:
                  name: {{ include "junior.fullname" . }}-secrets
                  key: anthropic-api-key
            - name: GITHUB_TOKEN
              valueFrom:
                secretKeyRef:
                  name: {{ include "junior.fullname" . }}-secrets
                  key: github-token
            - name: SECRET_KEY
              valueFrom:
                secretKeyRef:
                  name: {{ include "junior.fullname" . }}-secrets
                  key: secret-key
            {{- if .Values.postgresql.enabled }}
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ include "junior.postgresql.secretName" . }}
                  key: {{ include "junior.postgresql.secretKey" . }}
            {{- end }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          volumeMounts:
            - name: temp
              mountPath: /tmp
            - name: app-tmp
              mountPath: /app/temp
      volumes:
        - name: temp
          emptyDir: {}
        - name: app-tmp
          emptyDir: {}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}